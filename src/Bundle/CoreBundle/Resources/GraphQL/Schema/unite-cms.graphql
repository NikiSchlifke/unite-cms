
scalar Expression
scalar JSON
scalar Date
scalar DateTime
scalar Locale
scalar NULL

enum CONTENT_EVENT {
    CREATE
    UPDATE
    DELETE
    RECOVER
    REVERT
}

enum ORDER {
    ASC
    DESC
}

enum OPERATOR {
    EQ
    IS
    NEQ
    LT
    LTE
    GT
    GTE
    IN
    NIN
    CONTAINS
    NCONTAINS
}

directive @hide(
    if: Expression!
) on FIELD_DEFINITION | OBJECT

directive @access(
    # used in schema extender
    query: Expression
    mutation: Expression

    # used in resolver
    create: Expression
    read: Expression
    update: Expression
    delete: Expression
    permanent_delete: Expression
) on FIELD_DEFINITION | OBJECT

directive @valid(
    if: Expression!
    message: String
    groups: [CONTENT_EVENT!]
) on FIELD_DEFINITION | OBJECT

directive @webhook(
    if: Expression!
    url: String!
    groups: [CONTENT_EVENT!]
) on OBJECT

type UniteContentMeta {
    version: Int!
    deleted: DateTime
    locale: Locale
}

type UniteSchemaFile {
    name: String!
    value: String!
}

input UniteSchemaFileInput {
    name: String!
    value: String!
}

type UniteContentTypeField {
    id: ID!
    type: ID!
}

type UniteContentType {
    id: ID!
    type: ID!
    fields: [UniteContentTypeField!]
}

interface UniteUser {
    id: ID
    username: String!
    _meta: UniteContentMeta!
}

interface UniteContent {
    id: ID
    _meta: UniteContentMeta!
}

interface UniteSingleContent {
    _meta: UniteContentMeta!
}

interface UniteEmbeddedContent {
    id: ID
}

interface UniteContentResult {
    total: Int!
    result: [UniteContent!]
}

input UniteFilterInput {
    field: String
    path: [String]
    operator: OPERATOR
    value: [String]
    AND: [UniteFilterInput]
    OR: [UniteFilterInput]
}

input UniteOrderByInput {
    field: String!
    order: ORDER!
}

type UniteQuery {
    _version: String!
    logs(before: DateTime, after: DateTime) : String! @hide(if: "not has_role('ROLE_ADMIN')")
    types: [UniteContentType!] @hide(if: "not has_role('ROLE_ADMIN')")
    schemaFiles: [UniteSchemaFile!]! @hide(if: "not has_role('ROLE_ADMIN')")
}

type UniteMutation {
    _version: String!
    generateJWT: String! @hide(if: "user.isAnonymous()")
    generateLongLivingJWT: String! @hide(if: "not user.isFullyAuthenticated()")
    updateSchemaFiles(schemaFiles: [UniteSchemaFileInput]!) : Boolean! @hide(if: "not has_role('ROLE_ADMIN')")
}
