
type Category implements UniteContent {
    id: ID
    name: String! @textField
    articles_of: [Article!] @reference_ofField(reference_field: "category")
    tags_of: [Article!] @reference_ofField(reference_field: "tags")
}

type OtherCategory implements UniteContent {
    id: ID
    name: String! @textField
}

type ArticleTeaser implements UniteEmbeddedContent {
    id: ID
    title: String!              @textField
    computedTitle: String
}

enum ArticleStatus {
    DRAFT
    MODERATION
    PUBLISHED
}

type TextBlock implements UniteEmbeddedContent {
    id: ID
    text: String!   @textField
}

type HeadlineBlock implements UniteEmbeddedContent {
    id: ID
    headline: String!   @textField
}

union ContentBlock = TextBlock | HeadlineBlock
union AnyCategory = Category | OtherCategory

type Article implements UniteContent {
    id: ID
    title: String                       @textField

    """Main Content"""
    content: String                     @textField

    """
    Weitere Title
    Verwende dieses Feld, um weitere Titel zu definieren.
    """
    extra_titles: [String!]             @textField
    link: UniteLink                     @linkField
    teaser: ArticleTeaser               @embeddedField
    extra_teasers: [ArticleTeaser!]     @embeddedField
    category: Category                  @referenceField
    tags: [Category!]                   @referenceField
    status: ArticleStatus!              @choiceField
    contentBlocks: [ContentBlock!]      @embeddedField
    categoryUnionTest: AnyCategory      @referenceField
    foo: Expression                     @hide(if: "not is_granted('ROLE_ADMIN')")
}

type Admin implements UniteContent & UniteUser @hide(if: "not is_granted('ROLE_ADMIN')") {
    id: ID
    username: String!
    password: String!
}
